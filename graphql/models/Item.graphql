extend type Query {
    items(name: String @like): [Item] @paginate
    item(id: ID! @eq): Item @find
}

extend type Mutation {
    createItem(input: ItemCreateInput! @spread): Item @guard @field(resolver: "ItemMutation@store")
    updateItem(input: ItemUpdateInput! @spread): Item @update
    deleteItem(id: ID! @eq): Item @delete
    importItem(file: Upload!): ItemImportResponse
        @guard
        @field(resolver: "ItemMutation@import")
}

input ItemCreateInput {
    name: String!
    description: String
    item_code: String
}

input ItemUpdateInput {
    id: ID! @rules(apply: ["required", "exists:items,id"])
    name: String!
    description: String
    item_code: String
}

type Item {
    id: ID!
    name: String
    description: String
    item_code: String
}

type ItemImportResponse {
    success: Boolean!
    message: String!
    stats: ItemImportStats
}

type ItemImportStats {
    total_rows: Int
    imported: Int
    failed: Int
    errors: [String]
}
